MEMORY {
	# GEOS
	# disk driver, only contains JMPs, will be removed
	DRV:      start = $9000, size = $0D00;
	# variables, only used by disk & UI, not by graphics and fonts
	VARS:     start = $9D00, size = $0200;

	# Bank 3 (GEOS)
	LOKERNAL:     start = $C000, size = $0100, fill=yes, fillval=$AA;
	GKERNAL:      start = $C100, size = $3EFA, fill=yes, fillval=$AA;
	GVECTORS:     start = $FFFA, size = $0006, fill=yes, fillval=$AA;
}

SEGMENTS {
	# GEOS
	vars:     load = VARS,     type = bss;
	
	# Bank 3 (GEOS)
	entry:              load = LOKERNAL, type = ro;
	header:             load = LOKERNAL, type = ro;
	tobasic2:           load = LOKERNAL, type = ro;
	mainloop1:          load = LOKERNAL, type = ro;
	files2:             load = LOKERNAL, type = ro;
	jumptab:            load = GKERNAL, type = ro;
	start:              load = GKERNAL, type = ro;
	memory2:            load = GKERNAL, type = ro;
	ramexp1:            load = GKERNAL, type = ro;
	files1a2a:          load = GKERNAL, type = ro;
	files1a2b:          load = GKERNAL, type = ro;
	files1b:            load = GKERNAL, type = ro;
	serial1:            load = GKERNAL, type = ro;
	reu:                load = GKERNAL, type = ro;
	ramexp2:            load = GKERNAL, type = ro;
	tobasic1:           load = GKERNAL, type = ro;
	mouseptr:           load = GKERNAL, type = ro;
	dlgbox2:            load = GKERNAL, type = ro;
	mainloop3:          load = GKERNAL, type = ro;
	bitmask1:           load = GKERNAL, type = ro;
	bitmask2:           load = GKERNAL, type = ro;
	bitmask3:           load = GKERNAL, type = ro;
	files3:             load = GKERNAL, type = ro;
	mainloop2:          load = GKERNAL, type = ro;
	load1a:             load = GKERNAL, type = ro;
	load1b:             load = GKERNAL, type = ro;
	load1c:             load = GKERNAL, type = ro;
	load1d:             load = GKERNAL, type = ro;
	init1:              load = GKERNAL, type = ro;
	hw1a:               load = GKERNAL, type = ro;
	hw1b:               load = GKERNAL, type = ro;
	graph1:             load = GKERNAL, type = ro;
	hw2:                load = GKERNAL, type = ro;
	init2:              load = GKERNAL, type = ro;
	memory1a:           load = GKERNAL, type = ro;
	memory1b:           load = GKERNAL, type = ro;
	misc:               load = GKERNAL, type = ro;
	hw3:                load = GKERNAL, type = ro;
	load2:              load = GKERNAL, type = ro;
	graph2b:            load = GKERNAL, type = ro;
	graph2d:            load = GKERNAL, type = ro;
	graph2f:            load = GKERNAL, type = ro;
	graph2h:            load = GKERNAL, type = ro;
	inline:             load = GKERNAL, type = ro;
	graph2j:            load = GKERNAL, type = ro;
	graph2k:            load = GKERNAL, type = ro;
	graph2l1:           load = GKERNAL, type = ro;
	graph2l2:           load = GKERNAL, type = ro;
	graph2m:            load = GKERNAL, type = ro;
	graph2n:            load = GKERNAL, type = ro;
	process1:           load = GKERNAL, type = ro;
	process2:           load = GKERNAL, type = ro;
	process3a:          load = GKERNAL, type = ro;
	process3aa:         load = GKERNAL, type = ro;
	process3b:          load = GKERNAL, type = ro;
	process3c:          load = GKERNAL, type = ro;
	sprites:            load = GKERNAL, type = ro;
	math1a1:            load = GKERNAL, type = ro;
	math1a2:            load = GKERNAL, type = ro;
	math1b:             load = GKERNAL, type = ro;
	math1c1:            load = GKERNAL, type = ro;
	math1c2:            load = GKERNAL, type = ro;
	math1d:             load = GKERNAL, type = ro;
	mouse1:             load = GKERNAL, type = ro;
	panic1:             load = GKERNAL, type = ro;
	panic2:             load = GKERNAL, type = ro;
	panic3:             load = GKERNAL, type = ro;
	serial2:            load = GKERNAL, type = ro;
	patterns:           load = GKERNAL, type = ro;
	memory3:            load = GKERNAL, type = ro;
	load3:              load = GKERNAL, type = ro;
	files6a:            load = GKERNAL, type = ro;
	files6b:            load = GKERNAL, type = ro;
	files6c:            load = GKERNAL, type = ro;
	deskacc1:           load = GKERNAL, type = ro;
	load4b:             load = GKERNAL, type = ro;
	deskacc2:           load = GKERNAL, type = ro;
	files7:             load = GKERNAL, type = ro;
	deskacc3:           load = GKERNAL, type = ro;
	files8:             load = GKERNAL, type = ro;
	files9:             load = GKERNAL, type = ro;
	files10:            load = GKERNAL, type = ro;
	init4:              load = GKERNAL, type = ro;
	init3:              load = GKERNAL, type = ro;
	graph3a:            load = GKERNAL, type = ro;
	graph3b:            load = GKERNAL, type = ro;
	graph3c:            load = GKERNAL, type = ro;
	conio1:             load = GKERNAL, type = ro;
	conio2:             load = GKERNAL, type = ro;
	conio3a:            load = GKERNAL, type = ro;
	conio4:             load = GKERNAL, type = ro;
	conio5:             load = GKERNAL, type = ro;
	conio6:             load = GKERNAL, type = ro;
	math2:              load = GKERNAL, type = ro;
	mouse2:             load = GKERNAL, type = ro;
	menu1:              load = GKERNAL, type = ro;
	menu2:              load = GKERNAL, type = ro;
	menu3:              load = GKERNAL, type = ro;
	icon1:              load = GKERNAL, type = ro;
	mouse3:             load = GKERNAL, type = ro;
	icon2:              load = GKERNAL, type = ro;
	dlgbox1a:           load = GKERNAL, type = ro;
	dlgbox1b:           load = GKERNAL, type = ro;
	dlgbox1c:           load = GKERNAL, type = ro;
	dlgbox1d:           load = GKERNAL, type = ro;
	dlgbox1e1:          load = GKERNAL, type = ro;
	dlgbox1e2:          load = GKERNAL, type = ro;
	dlgbox1f:           load = GKERNAL, type = ro;
	dlgbox1g:           load = GKERNAL, type = ro;
	dlgbox1h:           load = GKERNAL, type = ro;
	dlgbox1i:           load = GKERNAL, type = ro;
	dlgbox1j:           load = GKERNAL, type = ro;
	dlgbox1k:           load = GKERNAL, type = ro;
	mouse4:             load = GKERNAL, type = ro;
	irq:                load = GKERNAL, type = ro;
	keyboard1:          load = GKERNAL, type = ro;
	keyboard2:          load = GKERNAL, type = ro;
	keyboard3:          load = GKERNAL, type = ro;
	time1:              load = GKERNAL, type = ro;
	time2:              load = GKERNAL, type = ro;
	drvcbdos:           load = GKERNAL, run = DRV, type = ro, define = yes;
	vectors:            load = GVECTORS, type = ro;
}
