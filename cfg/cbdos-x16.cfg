MEMORY {
	# zero page
	#         start = $0000, size = $0080; # available to the user (or GEOS)
	ZPKERNAL: start = $0080, size = $0012; # KERNAL
	ZPCBDOS:  start = $0092, size = $0011; # CBDOS
	#         start = $00A3, size = $0006; # reserved for CBDOS or BASIC growth
	ZPFPLIB:  start = $00A9, size = $002B; # FPLIB
	ZPBASIC:  start = $00D4, size = $002B; # BASIC (last byte used: $FE)

	# $0200-$02FF: always-available variables and RAM code
	KVAR:     start = $0200, size = $00BA; # KERNAL
	#         start = $02BA, size = $000A; # reserved for KERNAL growth
	KERNRAM:  start = $02C4, size = $0020; # KERNAL RAM code
	GDRVVEC:  start = $02E4, size = $001C; # framebuffer driver vectors

	# $0300-$0333: vectors
	BVECTORS: start = $0300, size = $0013; # BASIC vectors
	KVECTORS: start = $0314, size = $0020; # KERNAL vectors
	
	# $0334-$03FF: variables and RAM code (not available for *legacy* GEOS apps)
	KVAR2:    start = $0334, size = $0057; # KERNAL: screen editor table
	KERNRAM2: start = $038B, size = $003F; # KERNAL: banked IRQ, fetch, stash
	#         start = $03CA, size = $0002; # reserved for KERNAL growth
	FPVARS:   start = $03CC, size = $0009; # FPLIB
	BVARS:    start = $03D5, size = $002B; # BASIC

	# KERNAL/CBDOS bank #0 vars
	KVARSB0:  start = $A000, size = $0C00;
	CBDOSDAT: start = $AC00, size = $1400;

	# Bank 2 (CBDOS)
	CBDOS:    start = $C000, size = $3FFE, fill=yes, fillval=$AA;
	IRQB:     start = $FFFE, size = $0002, fill=yes, fillval=$AA;
}

SEGMENTS {
	# Bank 2 (CBDOS)
	ZPCBDOS:    load = ZPCBDOS,  type = zp;
	cbdos:      load = CBDOS,    type = ro;
	CODE:       load = CBDOS,    type = ro;
	cbdos_data: load = CBDOSDAT, type = bss;
	IRQB:       load = IRQB,     type = ro;
}
